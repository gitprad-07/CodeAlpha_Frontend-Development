<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Neon Waves Player</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary: #0ab8b6;
            --secondary: #08a1cc;
            --dark: #0e1e25;
            --darker: #0a161b;
            --light: #e0f7fa;
            --highlight: #00e5ff;
            --progress: #1de9b6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--darker), var(--dark));
            color: var(--light);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .music-player {
            width: 100%;
            max-width: 400px;
            background: rgba(10, 24, 30, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 181, 173, 0.2),
                        0 0 0 1px rgba(10, 184, 182, 0.1);
            padding: 25px;
            position: relative;
            transition: all 0.3s ease;
        }

        .player-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .player-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--primary);
            text-shadow: 0 0 10px rgba(10, 184, 182, 0.4);
        }

        .queue-btn {
            background: rgba(10, 184, 182, 0.1);
            border: none;
            color: var(--primary);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: all 0.3s ease;
        }

        .queue-btn:hover {
            background: rgba(10, 184, 182, 0.3);
            transform: scale(1.05);
        }

        .album-art {
            width: 220px;
            height: 220px;
            margin: 0 auto 25px;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            position: relative;
            border: 2px solid rgba(10, 184, 182, 0.3);
            transition: transform 0.5s ease, opacity 0.5s ease;
        }

        .album-art img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .song-info {
            text-align: center;
            margin-bottom: 25px;
            transition: all 0.5s ease;
        }

        .song-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--light);
            transition: all 0.5s ease;
        }

        .song-artist {
            font-size: 1rem;
            color: var(--primary);
            letter-spacing: 1px;
            transition: all 0.5s ease;
        }

        .progress-container {
            width: 100%;
            height: 6px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            margin-bottom: 10px;
            cursor: pointer;
        }

        .progress {
            width: 0%;
            height: 100%;
            background: var(--progress);
            border-radius: 10px;
            position: relative;
            transition: width 0.1s linear;
            box-shadow: 0 0 5px var(--highlight);
        }

        .time-info {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.6);
            margin-bottom: 25px;
        }

        .controls {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .control-btn {
            background: none;
            border: none;
            color: var(--light);
            font-size: 1.3rem;
            cursor: pointer;
            width: 50px;
            height: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .control-btn:hover {
            color: var(--highlight);
            transform: scale(1.1);
        }

        .play-btn {
            background: var(--primary);
            color: var(--darker);
            width: 60px;
            height: 60px;
            font-size: 1.8rem;
            box-shadow: 0 5px 15px rgba(10, 184, 182, 0.4);
        }

        .play-btn:hover {
            background: var(--highlight);
            transform: scale(1.15);
        }

        .volume-container {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .volume-icon {
            margin-right: 10px;
            font-size: 1rem;
            color: var(--primary);
        }

        .volume-slider {
            width: 100%;
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            appearance: none;
            outline: none;
            cursor: pointer;
        }

        .volume-slider::-webkit-slider-thumb {
            appearance: none;
            width: 14px;
            height: 14px;
            background: var(--primary);
            border-radius: 50%;
            box-shadow: 0 0 5px var(--highlight);
        }

        .queue {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.5s ease;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 10px;
        }

        .queue.active {
            max-height: 300px;
            overflow-y: auto;
            margin-top: 20px;
            padding: 10px;
        }

        .queue-item {
            padding: 12px 15px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 8px;
            margin-bottom: 5px;
        }

        .queue-item:hover {
            background: rgba(10, 184, 182, 0.1);
        }

        .queue-item.active {
            background: rgba(10, 184, 182, 0.3);
            border-left: 3px solid var(--primary);
        }

        .queue-item img {
            width: 40px;
            height: 40px;
            border-radius: 5px;
            margin-right: 15px;
            object-fit: cover;
        }

        .queue-info {
            flex: 1;
        }

        .queue-title {
            font-size: 0.9rem;
            margin-bottom: 3px;
        }

        .queue-artist {
            font-size: 0.7rem;
            color: var(--primary);
        }

        .queue-duration {
            font-size: 0.7rem;
            color: rgba(255, 255, 255, 0.6);
        }

        /* Animation for rotating album art when playing */
        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .playing .album-art img {
            animation: rotate 20s linear infinite;
        }

        /* Song transition animations */
        .song-transition {
            opacity: 0;
            transform: translateY(20px);
        }

        /* Responsive adjustments */
        @media (max-width: 480px) {
            .music-player {
                padding: 20px;
            }

            .album-art {
                width: 180px;
                height: 180px;
            }

            .controls {
                gap: 15px;
            }

            .control-btn {
                width: 45px;
                height: 45px;
                font-size: 1.2rem;
            }

            .play-btn {
                width: 55px;
                height: 55px;
                font-size: 1.6rem;
            }
        }

        @media (max-width: 360px) {
            .album-art {
                width: 160px;
                height: 160px;
            }

            .song-title {
                font-size: 1.3rem;
            }

            .controls {
                gap: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="music-player">
        <div class="player-header">
            <h2 class="player-title">Neon Waves</h2>
            <button class="queue-btn" id="queue-toggle">
                <i class="fas fa-list-music"></i>
            </button>
        </div>

        <div class="album-art">
            <img src="https://source.unsplash.com/random/800x800/?electronic,music" alt="Album Art">
        </div>

        <div class="song-info">
            <h3 class="song-title">Loading...</h3>
            <p class="song-artist">Artist</p>
        </div>

        <div class="progress-container" id="progress-container">
            <div class="progress" id="progress"></div>
        </div>

        <div class="time-info">
            <span class="current-time" id="current-time">0:00</span>
            <span class="duration" id="duration">0:00</span>
        </div>

        <div class="controls">
            <button class="control-btn" id="prev-btn">
                <i class="fas fa-step-backward"></i>
            </button>
            <button class="control-btn play-btn" id="play-btn">
                <i class="fas fa-play"></i>
            </button>
            <button class="control-btn" id="next-btn">
                <i class="fas fa-step-forward"></i>
            </button>
        </div>

        <div class="volume-container">
            <i class="fas fa-volume-up volume-icon"></i>
            <input type="range" class="volume-slider" id="volume-slider" min="0" max="1" step="0.01" value="0.7">
        </div>

        <div class="queue" id="queue">
            <!-- Queue items will be added dynamically -->
        </div>
    </div>

    <audio id="audio"></audio>

    <script>
        // DOM elements
        const audio = document.getElementById('audio');
        const playBtn = document.getElementById('play-btn');
        const prevBtn = document.getElementById('prev-btn');
        const nextBtn = document.getElementById('next-btn');
        const progressContainer = document.getElementById('progress-container');
        const progress = document.getElementById('progress');
        const currentTimeEl = document.getElementById('current-time');
        const durationEl = document.getElementById('duration');
        const volumeSlider = document.getElementById('volume-slider');
        const queueToggle = document.getElementById('queue-toggle');
        const queue = document.getElementById('queue');
        const albumArt = document.querySelector('.album-art');
        const songTitle = document.querySelector('.song-title');
        const songArtist = document.querySelector('.song-artist');
        const songInfo = document.querySelector('.song-info');
        const musicPlayer = document.querySelector('.music-player');

        // Songs data
        const songs = [
            {
                title: "Emerald Dreams",
                artist: "Neon Wave",
                duration: "3:45",
                cover: "https://source.unsplash.com/random/800x800/?electronic,green",
                audio: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
            },
            {
                title: "Ocean Depth",
                artist: "Aquatic Beats",
                duration: "4:20",
                cover: "https://source.unsplash.com/random/800x800/?ocean,blue",
                audio: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
            },
            {
                title: "City Neon",
                artist: "Urban Pulse",
                duration: "3:15",
                cover: "https://source.unsplash.com/random/800x800/?city,night",
                audio: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3"
            },
            {
                title: "Digital Mirage",
                artist: "Cyber Dreams",
                duration: "5:10",
                cover: "https://source.unsplash.com/random/800x800/?digital,art",
                audio: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-4.mp3"
            },
            {
                title: "Midnight Cruise",
                artist: "Synth Voyage",
                duration: "4:05",
                cover: "https://source.unsplash.com/random/800x800/?night,car",
                audio: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-5.mp3"
            }
        ];

        // Current song index
        let currentSongIndex = 0;
        let isPlaying = false;
        let isQueueVisible = false;

        // Initialize queue
        function initQueue() {
            songs.forEach((song, index) => {
                const queueItem = document.createElement('div');
                queueItem.classList.add('queue-item');
                if (index === currentSongIndex) {
                    queueItem.classList.add('active');
                }
                
                queueItem.innerHTML = `
                    <img src="${song.cover}" alt="${song.title}">
                    <div class="queue-info">
                        <div class="queue-title">${song.title}</div>
                        <div class="queue-artist">${song.artist}</div>
                    </div>
                    <div class="queue-duration">${song.duration}</div>
                `;
                
                queueItem.addEventListener('click', () => {
                    playSong(index);
                });
                
                queue.appendChild(queueItem);
            });
        }

        // Animate song transition
        function animateSongTransition() {
            // Add transition class
            albumArt.classList.add('song-transition');
            songInfo.classList.add('song-transition');
            
            // Remove transition class after animation completes
            setTimeout(() => {
                albumArt.classList.remove('song-transition');
                songInfo.classList.remove('song-transition');
            }, 500);
        }

        // Load song
        function loadSong(song) {
            // Start transition animation
            animateSongTransition();
            
            // Update song info after a small delay to allow animation
            setTimeout(() => {
                songTitle.textContent = song.title;
                songArtist.textContent = song.artist;
                albumArt.querySelector('img').src = song.cover;
                audio.src = song.audio;
                durationEl.textContent = song.duration;
                
                // Update active queue item
                document.querySelectorAll('.queue-item').forEach((item, index) => {
                    if (index === currentSongIndex) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });
            }, 250);
        }

        // Play song
        function playSong(index) {
            if (index >= 0 && index < songs.length) {
                currentSongIndex = index;
                loadSong(songs[currentSongIndex]);
                play();
            }
        }

        // Play
        function play() {
            isPlaying = true;
            playBtn.querySelector('i').classList.remove('fa-play');
            playBtn.querySelector('i').classList.add('fa-pause');
            musicPlayer.classList.add('playing');
            audio.play();
        }

        // Pause
        function pause() {
            isPlaying = false;
            playBtn.querySelector('i').classList.remove('fa-pause');
            playBtn.querySelector('i').classList.add('fa-play');
            musicPlayer.classList.remove('playing');
            audio.pause();
        }

        // Previous song
        function prevSong() {
            currentSongIndex--;
            if (currentSongIndex < 0) {
                currentSongIndex = songs.length - 1;
            }
            playSong(currentSongIndex);
        }

        // Next song (autoplay next song)
        function nextSong() {
            currentSongIndex++;
            if (currentSongIndex >= songs.length) {
                currentSongIndex = 0;
            }
            playSong(currentSongIndex);
        }

        // Update progress bar
        function updateProgress(e) {
            const { duration, currentTime } = e.srcElement;
            const progressPercent = (currentTime / duration) * 100;
            progress.style.width = `${progressPercent}%`;
            
            // Format time
            const currentMinutes = Math.floor(currentTime / 60);
            let currentSeconds = Math.floor(currentTime % 60);
            if (currentSeconds < 10) {
                currentSeconds = `0${currentSeconds}`;
            }
            currentTimeEl.textContent = `${currentMinutes}:${currentSeconds}`;
        }

        // Set progress
        function setProgress(e) {
            const width = this.clientWidth;
            const clickX